;;; theme-buffet-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from theme-buffet.el

(autoload 'theme-buffet-a-la-carte "theme-buffet" "\
Prompt user for a theme according to the current period of the day.
When called from Lisp code, load a random theme from the current day period." t)
(autoload 'theme-buffet-order-other-period "theme-buffet" "\
Interactively load a random theme from a prompted period.
When called from Lisp code, load a random theme from PERIOD.

(fn &optional PERIOD)" t)
(autoload 'theme-buffet-anything-goes "theme-buffet" "\
Interactively load an existing random theme." t)
(function-put 'theme-buffet-anything-goes 'interactive-only 't)
(defvar theme-buffet-mode nil "\
Non-nil if Theme-Buffet mode is enabled.
See the `theme-buffet-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `theme-buffet-mode'.")
(custom-autoload 'theme-buffet-mode "theme-buffet" nil)
(autoload 'theme-buffet-mode "theme-buffet" "\
Theme-Buffet serves your preferred themes according to the time of day.

You eyes will thank you.  Or not...

The preference for the themes is specified in the `theme-buffet-menu'

This is a global minor mode.  If called interactively, toggle the
`Theme-Buffet mode' mode.  If the prefix argument is positive,
enable the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='theme-buffet-mode)'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
 (autoload 'theme-buffet-timer-mins "theme-buffet")
 (autoload 'theme-buffet-timer-hours "theme-buffet")
 (autoload 'theme-buffet-built-in "theme-buffet")
 (autoload 'theme-buffet-modus-ef "theme-buffet")
 (autoload 'theme-buffet-end-user "theme-buffet")
(register-definition-prefixes "theme-buffet" '("theme-buffet-"))

;;; End of scraped data

(provide 'theme-buffet-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; theme-buffet-autoloads.el ends here
